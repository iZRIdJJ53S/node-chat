<script type="text/javascript" src="/socket.io/socket.io.js"></script>
<script type="text/javascript" src="/js/countdown/jquery.countdown.min.js"></script>
<script type="text/javascript" src="/js/countdown/jquery.countdown-ja.js"></script>

<script type="text/javascript">
<!--
/**
 * 「もっと見る」で出すイベントを１０件生成します。
 * 
 * @class イベントリストの生成クラスです。<br>
 * clickイベントにより、イベントリストを１０件生成。
 * 
 */
$('#view-more-events').click(function() {

  var obj = $(this);
  
  $('#view-more-events').hide();
  $('#view-more-loader').show();
  
  var last_id = $('#last_id').text();
  
  $.ajax({
    type: "GET",
    url: "/get-events",
    data: {last_id: last_id, limit: 5, dec_status: 2},
    success: function(data){
    	console.log(data);
	  if(data.text=="no result"){
	  	  $('#view-more-loader').hide();
	      $('#view-more-events').hide();
	      $('#last_id').html(last_id);
	      $('#view-more-events').hide();
	  }else{
	      var write_data = '';
	      for (var j = 0; j < data.event_data.length; j++){
	        var event_data = data.event_data[j];
	        write_data += makeEventListParts(event_data);
	        last_id = data.event_data[j].id;
	      }
	      $('#ul-events').append(write_data);
	      $('#view-more-loader').hide();
	      $('#view-more-events').show();
	      $('#last_id').html(last_id);
	  }
    },
    error: function(data){
      // error
    }
  });
});

/**
 * EVENTを１件リスト用に生成します。
 * 
 * @class イベントリストの生成クラスです。<br>
 * event_dataの内容に合わせてリストを生成します。
 * 
 * @param {object} event_data	イベントデータ
 */
function makeEventListParts(event_data) {
    var write_data = '';
    write_data += '<li>';
    write_data += '<div class="ticket-wrapper">';
    write_data += '<div class="left">';
    write_data += '<div class="icon"><img src="'+event_data.user_image+'"></div>';
    write_data += '<h3 class="title">';
    write_data += event_data.title+'<br><span class="username">by '+event_data.user_name+'</span><br><span class="tag">一緒に楽しむメンバ</span>';
    if (event_data.status === 2) {
      write_data += '<span class="status-a">参加者募集中</span>';
    } else {
      write_data += '<span class="status-b">オーディエンス募集中</span>';
    }
    write_data += '</h3>';
    write_data += '<div class="time" id="deadline_time_'+event_data.id+'">';
    write_data += 'スタートまで:<span class="counter" id="deadline_'+event_data.id+'"></span>';
    write_data += '</div>';
	write_data += makeCountDownParts(event_data.deadline,event_data.id);	//deadline script
	write_data += '<div class="member" id="member-parts-area-'+event_data.id+'">';
	write_data += makeMemberParts(event_data.id, event_data.target_num, event_data.supporter_num);
	write_data += '</div>';
	write_data += '</div>';
	write_data += '<div class="right">';
	write_data += ' <a href="#" name="join-button-right">';
	write_data += ' <div class="button" id="join-button-right-'+event_data.id+'">参加</div></a>';
	write_data += ' <a href="/dec/'+event_data.id+'"><div class="button">詳細</div></a>';
	write_data += '</div>';
    write_data += '<div class="participant" id="dec-supporters-'+event_data.id+'"></div>';
    write_data += makeParticipantParts(event_data.id);	//participant script
    write_data += makeCheckStatusJoinParts(event_data.id, event_data.target_num, event_data.supporter_num);	//checkStatusJoin script
    write_data += '</li>';
    /**
     * イベントリスト
     * @return {String}
     */
    return write_data;
}

/**
 * HouseLogを１件リスト用に生成します。
 * 
 * @class イベントリストの生成クラスです。<br>
 * event_dataの内容に合わせてリストを生成します。
 * 
 * @param {object} event_data	イベントデータ
 */
function makeSuccessListParts(event_data) {
    var write_data = '';
    write_data += '<li>';
    write_data += '<div class="ticket-wrapper">';
    write_data += '<div class="left">';
    write_data += '<div class="icon"><img src="'+event_data.user_image+'"></div>';
    write_data += '<h3 class="title">';
    write_data += event_data.title+'<br><span class="username">by '+event_data.user_name+'</span><br><span class="tag">一緒に楽しむメンバ</span>';
    write_data += '</h3>';
    write_data += '<div class="view" id="view_'+event_data.id+'">';
    write_data += 'view:';
    write_data += '</div>';
	write_data += '<div class="member" id="member-parts-area'+event_data.id+'">';
	write_data += makeSuccessMemberParts(event_data.target_num,event_data.supporter_num);
	write_data += '</div>';
	write_data += '</div>';
	write_data += '<div class="right">';
	write_data += '	<a href="/suc/'+event_data.id+'"><div class="button">見る</div></a>';
	write_data += '</div>';
    write_data += '<div class="participant" id="dec-supporters-'+event_data.id+'"></div>';
    write_data += makeParticipantParts(event_data.id);	//participant script
    write_data += '</li>';
    /**
     * イベントリスト
     * @return {String}
     */
    return write_data;
}

/**
 * 残り時間を生成します。
 * 
 * @class 残り時間の生成クラスです。<br>
 * デッドラインを受け取り、現在時刻からのカウントダウンをします。
 * 
 * @param {string} deadline	デッドラインタイム
 * @param {int} id	デッドラインID
 */
function makeCountDownParts(deadline,id){
	var write_data = '';
    write_data += '				    <script type="text/javascript">';
    write_data += '						var obj = $(function(){';
    write_data += '							var d_obj = new Date("'+deadline+'");';
	write_data += '							var now_obj = new Date();';
	write_data += '							console.log(now_obj < d_obj);';
	write_data += '							if( now_obj < d_obj ){';
    write_data += '								$("#deadline_'+id+'").countdown({';
	write_data += '									until: d_obj,';
	write_data += '									layout: "残り{d<}{dn}日と{d>}{h<}{hn}時間{h>}{m<}{mnn}分{m>}{snn}秒",';
	write_data += '									format: "dhms"';
	write_data += '								});';
	write_data += '							} else {';
	write_data += '								$("#deadline_time_'+id+'").html("");';
    write_data += '							}';
    write_data += '						});';
    write_data += '					</scr'+'ipt>';
	/**
     * イベントリスト
     * @return {String}
     */
    return write_data;
}

function makeMemberParts(event_id, target_num, supporter_num){
	var write_data = '参加者:';
	if (target_num === supporter_num) {
		write_data += '<span class="counter" id="member-counter-'+event_id+'">'
		write_data += supporter_num+'人</span>/'+target_num+'人';
	} else {
		write_data += '<span class="counter" id="member-counter-'+event_id+'">'
		write_data += '残り'+(target_num-supporter_num)+'人</span>/'+target_num+'人';
	}
	return write_data;
}

function makeSuccessMemberParts(target_num,supporter_num){
	var write_data = '参加者: ';
	write_data += supporter_num+'人/'+target_num+'人';
	return write_data;
}

function makeParticipantParts(id){
	var write_data = '';
	write_data += '<script type="text/javascript">';
	write_data += '$().ready(function(){';
	write_data += '$.ajax({';
	write_data += 'type: "GET",';
	write_data += 'url: "/get-supporters",';
	write_data += 'data: {id: '+id+', limit: 20},';
	write_data += 'success: function(data){';
	write_data += 'var img_tag = "";';
	write_data += 'for (var j = 0; j < data.supporter_data.length; j++){';
	write_data += 'img_tag += \'<img src="\'+data.supporter_data[j].image+\'">\';';
	write_data += '}';
	write_data += '$("#dec-supporters-'+id+'").append(img_tag);';
	write_data += '},';
	write_data += 'error: function(data){';
	write_data += '}';
	write_data += '});';
	write_data += '});';
	write_data += '</scr'+'ipt>';
	return write_data;
}


function makeCheckStatusJoinParts(event_id, target_num, supporter_num) {
  var write_data = '';
  write_data += '<script type="text/javascript">';
  write_data += '  if ('+target_num+' === '+supporter_num+') {';
  write_data += '    $("#join-button-right-'+event_id+'").parent().parent().text("満員御礼");';
  write_data += '  } else {';
  write_data += '    $.ajax({';
  write_data += "      type: 'GET',";
  write_data += "      url: '/get-is-supporters',";
  write_data += '      data: {dec_id: '+event_id+'},';
  write_data += '      success: function(data){';
  write_data += '        if (data.res_flg) {';
  write_data += '          $("#join-button-right-'+event_id+'").parent().parent().text("参加済み");';
  write_data += '        }';
  write_data += '      },';
  write_data += '      error: function(data){';
  write_data += '        if (data.status === 401) {';
  write_data += '          $("#join-button-right-'+event_id+'").parent().parent().text("ログインが必要で");';
  write_data += '        }';
  write_data += '      }';
  write_data += '    });';
  write_data += '  }';
  write_data += '</scr'+'ipt>';
  return write_data;
}




$('a[name="join-button-right"], a[name="join-button-bottom"]').click(function() {
  var obj = $(this);
console.log(obj);
  var event_obj = obj.find('div');
  var event_id  = event_obj.attr('id');
  event_id = parseInt(event_id.match(/[0-9]+/));

  var loader_img = $('<img src="/img/loader.gif">');
  event_obj.html(loader_img);

  $.ajax({
    type: 'POST',
    url: '/join-commit',
    data: {id: event_id},
    success: function(data){
      if (data.join_flg === 'ok') {
        // 参加した
        $('#join-button-right-'+event_id).parent().parent().text('参加済み');
        $('#join-button-bottom-'+event_id).parent().parent().text('参加済み');
        // 人数も変更
        var sup_cnt = $('#member-counter-'+event_id).text();
        sup_cnt = parseInt(sup_cnt.match(/[0-9]+/)) - 1;
        if (sup_cnt > 0) {
          $('#member-counter-'+event_id).text('残り'+sup_cnt+'人');
        } else {
          $('#member-counter-'+event_id).text('満員御礼');
        }

        // アイコンも追加
        var user_icon = $('<img>').attr('src', data.user_image);
        $('#dec-supporters-'+event_id).append(user_icon);
      }

    },
    error: function(data){
      // error
    }
  });

  return false;
});




function __isLogin() {

  $.ajax({
    type: 'GET',
    url: '/get-is-login',
    data: {},
    success: function(data){
      if (data.login_flg) {
        $('#auth-login-twitter').hide();
        $('#auth-logout').show();
        $('#mypage-href').show();
        $('#auth-icon-img img').attr('src', data.user_image);
        $('#auth-icon-img').show();
      }
    },
    error: function(data){
      // error
    }
  });
}

// DOMがロードされて操作・解析が可能になったタイミングで関数を実行
$().ready(function(){
  // ログインチェック実行
  __isLogin();
});
//-->
</script>



<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-29477382-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

